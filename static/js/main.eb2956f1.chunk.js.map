{"version":3,"sources":["components/Header.js","components/Footer.js","components/Movies.js","components/MovieInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","class","title","Footer","Movies","movies","map","movie","Card","style","width","Img","variant","src","Poster","Body","Title","Text","Year","MovieInfo","useState","query","setQuery","setMovies","showMovies","setShowMovies","totalResults","setTotalResults","page","setPage","numPages","setNumPages","fetchMyAPI","a","searchParam","encodeURIComponent","apiUrl","process","console","log","fetch","response","json","Search","i","apiUrl2","imdbID","response2","Math","ceil","useEffect","href","onSubmit","e","preventDefault","htmlFor","id","value","type","onChange","target","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAYeA,MATf,SAAgBC,GACZ,OACI,sBAAKC,UAAU,SAAf,UACI,mBAAGC,MAAM,iBAAT,4BADJ,IACkDF,EAAMG,MADxD,IAC+D,mBAAGD,MAAM,iBAAT,gC,MCKxDE,MARf,SAAgBJ,GACZ,OACI,qBAAKC,UAAU,SAAf,SACKD,EAAMG,S,8CCyBJE,MA3Bf,SAAgBL,GAEZ,OACI,qBAAKC,UAAY,aAAjB,SACKD,EAAMM,OAAOC,KAAI,SAAAC,GACd,OAEI,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,WAAtB,SAEA,sBAAKV,UAAU,iBAAf,UAEI,cAACQ,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAKN,EAAMO,OAAQd,UAAU,eAErD,eAACQ,EAAA,EAAKO,KAAN,CAAWf,UAAU,YAArB,UACI,cAACQ,EAAA,EAAKQ,MAAN,UAAY,6BAAI,4BAAIT,EAAMS,YAC1B,cAACR,EAAA,EAAKS,KAAN,UAAW,6BAAKV,EAAMW,uBCkFnCC,MAlGf,WAAsB,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEWF,mBAAS,IAFpB,mBAEVf,EAFU,KAEFkB,EAFE,OAGmBH,oBAAS,GAH5B,mBAGVI,EAHU,KAGEC,EAHF,OAIuBL,mBAAS,GAJhC,mBAIVM,EAJU,KAIIC,EAJJ,OAKOP,mBAAS,GALhB,mBAKVQ,EALU,KAKJC,EALI,OAMeT,mBAAS,GANxB,mBAMVU,EANU,KAMAC,EANA,cAqBFC,IArBE,2EAqBjB,sCAAAC,EAAA,6DACUC,EAAcC,mBAAmBd,GACjCe,EAFV,0CAEsDC,UAFtD,cAEyFH,EAFzF,mCAE+HN,GAC3HU,QAAQC,IAAIH,GAHhB,SAIyBI,MAAMJ,GAJ/B,cAIQK,EAJR,gBAKqBA,EAASC,OAL9B,OAKID,EALJ,OAOIH,QAAQC,IAAI,cAPhB,OAAAN,EAAA,KAQkBQ,EAASE,QAR3B,sDAQaC,EARb,WAUcC,EAVd,0CAU2DR,UAV3D,cAU8FI,EAASE,OAAOC,GAAGE,OAVjH,mCAUkJlB,GAVlJ,UAY8BY,MAAMK,GAZpC,eAYYE,EAZZ,iBAa0BA,EAAUL,OAbpC,QAaQK,EAbR,OAcQT,QAAQC,IAAIQ,GAEZN,EAASE,OAAOC,GAAKG,EAhB7B,wBAmBIT,QAAQC,IAAI,6BACZD,QAAQC,IAAIE,EAASE,QACrBpB,EAAUkB,EAASE,QAEnBhB,EAAgBc,EAASf,cACzBY,QAAQC,IAAI,kBAAoBE,EAASf,cACzCY,QAAQC,IAAI,0BAA4Bb,GACxCK,EAAYiB,KAAKC,KAAKR,EAASf,aAAe,KA1BlD,6CArBiB,sBA4DjB,OATAwB,qBAAU,WACQ,KAAV7B,GACAW,MAKL,CAACJ,IAGA,sBAAK5B,UAAU,YAAf,UAEI,sBAAKA,UAAU,WAAf,2CACkC,mBAAGmD,KAAK,0BAAR,kBADlC,WAGA,uBAAMC,SAzDd,SAAsBC,GAClBA,EAAEC,iBACFzB,EAAQ,GAKRG,IACAP,GAAc,IAiDV,UACI,uBAAO8B,QAAQ,eACf,uBACIC,GAAG,aACHC,MAAOpC,EACPqC,KAAK,OACLC,SAAU,SAAAN,GAAC,OAAI/B,EAAS+B,EAAEO,OAAOH,UAErC,wBAAQzD,UAAU,SAAlB,uBAECwB,EAAa,cAAC,EAAD,CAAQnB,OAAQA,IAAoB,6BAEtD,8BAEsB,IAAbyB,GACD,yCAAW,8BAAIJ,EAAJ,cAAX,SAA+CI,EAA/C,kBAAuE,4BAAIF,SAGnF,sBAAK5B,UAAU,iBAAf,UAEkB,IAAT4B,GAA2B,IAAbE,GACf,wBAAQ9B,UAAU,UAAU6D,QAAU,kBAAMhC,EAAQD,EAAK,IAAzD,+BAGCA,EAAOE,GACR,wBAAQ9B,UAAU,UAAU6D,QAAU,kBAAMhC,EAAQD,EAAK,IAAzD,kCC9ELkC,MAVf,WACE,OACE,sBAAK9D,UAAU,MAAf,UACE,cAAC,EAAD,CAAQE,MAAM,qBACd,cAAC,EAAD,IACA,cAAC,EAAD,CAAQA,MAAM,aCCL6D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb2956f1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(props) { // pass in props from parent component\r\n    return(\r\n        <div className=\"header\">\r\n            <i class=\"material-icons\">theater_comedy</i> {props.title} <i class=\"material-icons\">theater_comedy</i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer(props) { \r\n    return(\r\n        <div className=\"footer\">\r\n            {props.title}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './Movies.css';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction Movies(props) {\r\n\r\n    return (\r\n        <div className = \"moviesGrid\">\r\n            {props.movies.map(movie => {\r\n                return (\r\n                    \r\n                    <Card style={{ width: '19.8rem' }}> \r\n                    {/* <Card style={{ width: '45rem' }}> */}\r\n                    <div className=\"movieContainer\">\r\n                        {/* <div className=\"movieImage\" > */}\r\n                        <Card.Img variant=\"top\" src={movie.Poster} className=\"movieImage\" />\r\n                        {/* </div> */}\r\n                        <Card.Body className=\"movieBody\">\r\n                            <Card.Title><h2><b>{movie.Title}</b></h2></Card.Title>\r\n                            <Card.Text><h2>{movie.Year}</h2></Card.Text>\r\n                        </Card.Body>\r\n                    </div>\r\n                    </Card>\r\n                   \r\n                )  \r\n            })}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Movies;","import React, {useState, useEffect } from 'react';\r\nimport Movies from './Movies';\r\n\r\nfunction MovieInfo() { \r\n    const [query, setQuery] = useState('');\r\n    const [movies, setMovies] = useState([]); // captures array of objects returned from API fetch\r\n    const [showMovies, setShowMovies] = useState(false);\r\n    const [totalResults, setTotalResults] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [numPages, setNumPages] = useState(0);\r\n\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setPage(1);        \r\n        // console.log(\"Displaying page: \");\r\n        // console.log(page);\r\n\r\n        // See items w/ title and movie state\r\n        fetchMyAPI();\r\n        setShowMovies(true);\r\n        // setQuery(\"\");\r\n    }\r\n\r\n    async function fetchMyAPI() {\r\n        const searchParam = encodeURIComponent(query); // URI encode search using escape chars (%)\r\n        const apiUrl = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}&s=${searchParam}&type=movie&r=json&page=${page}`; // tt0206512\r\n        console.log(apiUrl);\r\n        let response = await fetch(apiUrl); // call API using fetch\r\n        response = await response.json(); // transform into json\r\n\r\n        console.log(\"for loop: \");\r\n        for (let i in response.Search) {\r\n            // console.log(response.Search[i].imdbID);\r\n            const apiUrl2 = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}&i=${response.Search[i].imdbID}&type=movie&r=json&page=${page}`;\r\n            // console.log(apiUrl2);\r\n            let response2 = await fetch(apiUrl2); // call API using fetch\r\n            response2 = await response2.json(); // transform into json\r\n            console.log(response2);\r\n            // Update the array with additional details for each movie\r\n            response.Search[i] = response2;\r\n        }\r\n\r\n        console.log('Updated search response: ');\r\n        console.log(response.Search);\r\n        setMovies(response.Search);\r\n\r\n        setTotalResults(response.totalResults);\r\n        console.log('Total results: ' + response.totalResults);\r\n        console.log('Total results (state): ' + totalResults);\r\n        setNumPages(Math.ceil(response.totalResults / 10));\r\n        // setTotalResults(response.totalResults, console.log('Total results: ' + totalResults));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (query !== \"\") {\r\n            fetchMyAPI();\r\n            \r\n        }\r\n        // window.scrollTo(0, 0);\r\n        \r\n    }, [page]);\r\n\r\n    return(\r\n        <div className=\"movieinfo\">\r\n            {/* Find your favorite movies to watch */}\r\n            <div className=\"api-info\">\r\n                Data provided for free by the <a href=\"http://www.omdbapi.com/\">OMDb</a> API.\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"queryInput\"></label>\r\n                <input\r\n                    id=\"queryInput\"\r\n                    value={query}\r\n                    type=\"text\"\r\n                    onChange={e => setQuery(e.target.value)}\r\n                    />\r\n                <button className=\"search\">Search</button>\r\n            </form>\r\n                {showMovies ? <Movies movies={movies}></Movies> : <></>}\r\n            \r\n            <div>\r\n                {\r\n                    (numPages !== 0) &&\r\n                    <p>Showing <b>{totalResults} results</b> over {numPages} pages | Page: <b>{page}</b></p>\r\n                }\r\n            </div>\r\n            <div className=\"navigationBtns\">\r\n                {\r\n                    (page !== 1 && numPages !== 0) &&\r\n                    <button className=\"prevBtn\" onClick= {() => setPage(page-1)}>  &lt; Previous Page</button> /* &lt; */\r\n                }\r\n                {\r\n                    (page < numPages) &&\r\n                    <button className=\"nextBtn\" onClick= {() => setPage(page+1)}> Next Page &gt; </button> /*<i class=\"material-icons\">arrow_forward_ios</i> */\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport MovieInfo from './components/MovieInfo';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title=\"Movie Search App\"></Header>\r\n      <MovieInfo></MovieInfo>\r\n      <Footer title=\"2021\"></Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}