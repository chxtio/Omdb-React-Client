{"version":3,"sources":["components/Header.js","components/Footer.js","components/Movies.js","components/MovieInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","class","title","Footer","Movies","useState","show","setShow","ID","setID","Title","setTitle","poster","setPoster","type","setType","released","setReleased","genre","setGenre","runtime","setRuntime","imdbRating","setRating","plot","setPlot","director","setDirector","a","apiUrl","process","fetch","response","json","console","log","Poster","Type","Released","Genre","Runtime","Plot","Director","useEffect","fetchMyAPI","movies","map","movie","id","imdbID","Card","onClick","e","target","currentTarget","Img","variant","src","Body","Text","style","margin","Year","Modal","centered","width","split","g","Button","MovieInfo","query","setQuery","setMovies","showMovies","setShowMovies","totalResults","setTotalResults","page","setPage","numPages","setNumPages","searchParam","encodeURIComponent","Search","Math","ceil","href","onSubmit","preventDefault","htmlFor","placeholder","value","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55522794.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(props) { // pass in props from parent component\r\n    return(\r\n        <div className=\"header\">\r\n            <i class=\"material-icons\">theater_comedy</i> {props.title} <i class=\"material-icons\">theater_comedy</i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer(props) { \r\n    return(\r\n        <div className=\"footer\">\r\n            {props.title}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, {useState, useEffect} from 'react';\r\nimport './Movies.css';\r\nimport { Card, Button, Modal } from 'react-bootstrap';\r\n\r\nfunction Movies(props) {\r\n    const [show, setShow] = useState(false);\r\n    const [ID, setID] = useState(0);\r\n    const [Title, setTitle] = useState(\"\");\r\n    const [poster, setPoster] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [released, setReleased] = useState(\"\");\r\n    const [genre, setGenre] = useState(\"\");\r\n    const [runtime, setRuntime] = useState(\"\");\r\n    const [imdbRating, setRating] = useState(0);\r\n    const [plot, setPlot] = useState(\"\");\r\n    const [director, setDirector] = useState(\"\");\r\n\r\n    const handleShow = (target) => {\r\n        setID(target.id);\r\n        console.log(target.id);\r\n\r\n        setShow(true);\r\n    }\r\n\r\n    const handleClose = () => {setShow(false);}\r\n\r\n    async function fetchMyAPI() {\r\n        const apiUrl = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}&i=${ID}&type=movie&r=json`;\r\n        // console.log(apiUrl);\r\n        let response = await fetch(apiUrl); // call API using fetch\r\n        response = await response.json(); // transform into json\r\n        console.log(response);\r\n\r\n        setTitle(response.Title);\r\n        console.log(\"Title: \" + response.Title);\r\n        console.log(Title);\r\n        setPoster(response.Poster);\r\n        // console.log(poster);\r\n        setType(response.Type);\r\n        setReleased(response.Released);\r\n        setGenre(response.Genre);\r\n        setRuntime(response.Runtime);\r\n        setRating(response.imdbRating);\r\n        setPlot(response.Plot);\r\n        setDirector(response.Director);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (show) {\r\n            fetchMyAPI(); \r\n        }     \r\n    }, [ID]);\r\n\r\n    return (\r\n        <div className = \"moviesGrid\">\r\n            {props.movies.map(movie => {\r\n\r\n                const id = movie.imdbID;\r\n\r\n                return (\r\n                    \r\n                    <Card className=\"card\"> \r\n                    <div className=\"movieContainer\" onClick = {(e) => {\r\n                        handleShow(e.currentTarget);\r\n                        }} \r\n                        id={id} \r\n                    >\r\n\r\n                        <Card.Img variant=\"top\" src={movie.Poster === 'N/A' ? 'https://placehold.it/198x264&text=Image+Not+Found' : movie.Poster} className=\"movieImage\" />\r\n                        {/* </div> */}\r\n                        <Card.Body className=\"cardBody\">\r\n                            <Card.Title><h2><b>{movie.Title}</b></h2></Card.Title>\r\n                            <Card.Text style={{margin: 5}}><b>{movie.Year}</b></Card.Text>\r\n                        </Card.Body>\r\n                    </div>\r\n                    </Card>\r\n\r\n                )  \r\n            })}\r\n\r\n            <Modal show={show} centered>\r\n                <Card className=\"modalMovieContainer\" style={{ width: '50rem' }}>\r\n                    <Card.Img variant=\"top\" className=\"modalMovieImage\" src={poster === 'N/A' ? 'https://placehold.it/198x264&text=Image+Not+Found' : poster}/> \r\n                    <Card.Body className=\"modalMovieBody\" style={{width: '23rem'}}>\r\n                        <Card.Title><h1><b>{Title}</b></h1></Card.Title>\r\n                        <Card.Text className=\"movieType\">\r\n                            {type}\r\n                        </Card.Text>\r\n                        <Card.Text className=\"movieRelease\">\r\n                            Release Date: {released}\r\n                        </Card.Text>\r\n                        <Card.Text className=\"genreTags\">\r\n                            {genre && genre.split(', ').map(g => <span>{g}</span>)}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                            Runtime: {runtime}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                            <h4><b>Rating: {imdbRating} / 10 </b></h4>\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                            {plot}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                            Director: {director}\r\n                        </Card.Text>\r\n                        <Button className=\"modalBtn\" variant=\"primary\" onClick = {handleClose}>Close</Button >\r\n                    </Card.Body>\r\n                </Card>\r\n            </Modal>\r\n\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Movies;","import React, {useState, useEffect } from 'react';\r\nimport Movies from './Movies';\r\n\r\nfunction MovieInfo() { \r\n    const [query, setQuery] = useState('');\r\n    const [movies, setMovies] = useState([]); // captures array of objects returned from API fetch\r\n    const [showMovies, setShowMovies] = useState(false);\r\n    const [totalResults, setTotalResults] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [numPages, setNumPages] = useState(0);\r\n\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setPage(1);        \r\n        // console.log(\"Displaying page: \");\r\n        // console.log(page);\r\n        \r\n        fetchMyAPI(); // See items w/ title and movie state\r\n        setShowMovies(true);\r\n        // setQuery(\"\");\r\n    }\r\n\r\n    async function fetchMyAPI() {\r\n        const searchParam = encodeURIComponent(query); // URI encode search using escape chars (%)\r\n        const apiUrl = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}&s=${searchParam}&type=movie&r=json&page=${page}`; // tt0206512\r\n        console.log(apiUrl);\r\n        let response = await fetch(apiUrl); // call API using fetch\r\n        response = await response.json(); // transform into json\r\n\r\n        setMovies(response.Search);\r\n\r\n        setTotalResults(response.totalResults);\r\n        console.log('Total results: ' + response.totalResults);\r\n        console.log('Total results (state): ' + totalResults);\r\n        setNumPages(Math.ceil(response.totalResults / 10));\r\n        // setTotalResults(response.totalResults, console.log('Total results: ' + totalResults));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (query !== \"\") {\r\n            fetchMyAPI(); \r\n        }        \r\n    }, [page]);\r\n\r\n    return(\r\n        <div className=\"movieinfo\">\r\n            {/* Find your favorite movies to watch */}\r\n            <div className=\"api-info\">\r\n                Data provided for free by the <a href=\"http://www.omdbapi.com/\">OMDb</a> API.\r\n            </div>\r\n            <form onSubmit={handleSubmit} >\r\n                <label htmlFor=\"queryInput\"></label>\r\n                <input\r\n                    id=\"queryInput\"\r\n                    placeholder=\"Enter movie title\"\r\n                    value={query}\r\n                    type=\"text\"\r\n                    onChange={e => setQuery(e.target.value)}\r\n                    />\r\n                <button className=\"search\">Search</button>\r\n            </form>\r\n\r\n\r\n\r\n\r\n                {showMovies ? <Movies movies={movies}></Movies> : <></>}\r\n            \r\n\r\n\r\n            <div>\r\n                {\r\n                    (numPages !== 0) &&\r\n                    <p>Showing <b>{totalResults} results</b> over {numPages} pages | Page: <b>{page}</b></p>\r\n                }\r\n            </div>\r\n            <div className=\"navigationBtns\">\r\n                {\r\n                    (page !== 1 && numPages !== 0) &&\r\n                    <button className=\"prevBtn\" onClick= {() => setPage(page-1)}>  &lt; Previous Page</button> /* &lt; */\r\n                }\r\n                {\r\n                    (page < numPages) &&\r\n                    <button className=\"nextBtn\" onClick= {() => setPage(page+1)}> Next Page &gt; </button> /*<i class=\"material-icons\">arrow_forward_ios</i> */\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport MovieInfo from './components/MovieInfo';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title=\"Movie Search App\"></Header>\r\n      <MovieInfo></MovieInfo>\r\n      <Footer title=\"2021\"></Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}