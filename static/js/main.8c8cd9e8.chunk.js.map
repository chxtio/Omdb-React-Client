{"version":3,"sources":["components/Header.js","components/Footer.js","components/Movies.js","components/MovieInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","class","title","Footer","Movies","movies","map","movie","Card","style","width","Img","variant","src","Poster","Body","Title","Text","Released","Runtime","imdbRating","Plot","Director","Genre","MovieInfo","useState","query","setQuery","setMovies","showMovies","setShowMovies","totalResults","setTotalResults","page","setPage","numPages","setNumPages","onSubmit","e","a","searchParam","encodeURIComponent","apiUrl","process","console","log","fetch","response","json","Search","i","apiUrl2","response2","Math","ceil","preventDefault","fetchMyAPI","htmlFor","id","value","type","onChange","target","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAYeA,MATf,SAAgBC,GACZ,OACI,sBAAKC,UAAU,SAAf,UACI,mBAAGC,MAAM,iBAAT,4BADJ,IACkDF,EAAMG,MADxD,IAC+D,mBAAGD,MAAM,iBAAT,gC,MCKxDE,MARf,SAAgBJ,GACZ,OACI,qBAAKC,UAAU,SAAf,SACKD,EAAMG,S,oDC2CJE,MA7Cf,SAAgBL,GAEZ,OACI,8BACKA,EAAMM,OAAOC,KAAI,SAAAC,GACd,OAEI,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,SACA,sBAAKV,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAf,SACA,cAACQ,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAKN,EAAMO,WAEnC,qBAAKd,UAAU,YAAYS,MAAO,CAAEC,MAAO,SAA3C,SACA,eAACF,EAAA,EAAKO,KAAN,WACI,cAACP,EAAA,EAAKQ,MAAN,UAAY,6BAAI,4BAAIT,EAAMS,YAC1B,eAACR,EAAA,EAAKS,KAAN,4BACmBV,EAAMW,YAEzB,eAACV,EAAA,EAAKS,KAAN,uBACcV,EAAMY,WAEpB,cAACX,EAAA,EAAKS,KAAN,UACI,6BAAI,yCAAYV,EAAMa,WAAlB,gBAER,cAACZ,EAAA,EAAKS,KAAN,UACKV,EAAMc,OAEX,eAACb,EAAA,EAAKS,KAAN,wBACeV,EAAMe,YAErB,eAACd,EAAA,EAAKS,KAAN,qBACYV,EAAMgB,yBCuE/BC,MAtGf,WAAsB,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEWF,mBAAS,IAFpB,mBAEVpB,EAFU,KAEFuB,EAFE,OAGmBH,oBAAS,GAH5B,mBAGVI,EAHU,KAGEC,EAHF,OAIuBL,mBAAS,GAJhC,mBAIVM,EAJU,KAIIC,EAJJ,OAKOP,mBAAS,GALhB,mBAKVQ,EALU,KAKJC,EALI,OAMeT,mBAAS,GANxB,mBAMVU,EANU,KAMAC,EANA,KAkEjB,OACI,sBAAKpC,UAAU,YAAf,+CAEI,uBAAMqC,SA5Dd,SAAsBC,GAAG,4CAQrB,sCAAAC,EAAA,6DACUC,EAAcC,mBAAmBf,GACjCgB,EAFV,0CAEsDC,UAFtD,cAEyFH,EAFzF,mCAE+HP,GAC3HW,QAAQC,IAAIH,GAHhB,SAIyBI,MAAMJ,GAJ/B,cAIQK,EAJR,gBAKqBA,EAASC,OAL9B,OAKID,EALJ,OAUIH,QAAQC,IAAI,cAVhB,OAAAN,EAAA,KAWkBQ,EAASE,QAX3B,sDAWaC,EAXb,WAccC,EAdd,0CAc2DR,UAd3D,cAc8FI,EAASE,OAAOC,GAAGlC,MAdjH,mCAciJiB,GAdjJ,UAiB8Ba,MAAMK,GAjBpC,eAiBYC,EAjBZ,iBAkB0BA,EAAUJ,OAlBpC,QAkBQI,EAlBR,OAmBQR,QAAQC,IAAIO,GAGZL,EAASE,OAAOC,GAAKE,EAtB7B,wBAyBIR,QAAQC,IAAI,6BACZD,QAAQC,IAAIE,EAASE,QACrBrB,EAAUmB,EAASE,QAEnBjB,EAAgBe,EAAShB,cACzBa,QAAQC,IAAI,kBAAoBE,EAAShB,cACzCa,QAAQC,IAAI,0BAA4Bd,GACxCK,EAAYiB,KAAKC,KAAKP,EAAShB,aAAe,KAhClD,6CARqB,sBAGrBO,EAAEiB,iBAEFX,QAAQC,IAAI,qBACZD,QAAQC,IAAIZ,GANS,mCA4CrBuB,GASA1B,GAAc,GACdH,EAAS,KAML,UACI,uBAAO8B,QAAQ,eACf,uBACIC,GAAG,aACHC,MAAOjC,EACPkC,KAAK,OACLC,SAAU,SAAAvB,GAAC,OAAIX,EAASW,EAAEwB,OAAOH,UAErC,wBAAQ3D,UAAU,SAAlB,uBAEC6B,EAAa,cAAC,EAAD,CAAQxB,OAAQA,IAAoB,6BAEtD,8BAEsB,IAAb8B,GACD,yCAAW,8BAAIJ,EAAJ,cAAX,SAA+CI,EAA/C,kBAAuE,4BAAIF,SAGnF,sBAAKjC,UAAU,iBAAf,UAEkB,IAATiC,GAA2B,IAAbE,GACf,wBAAQnC,UAAU,UAAU+D,QAAU,kBAAM7B,EAAQD,EAAK,IAAzD,+BAICA,EAAOE,GACR,wBAAQnC,UAAU,UAAU+D,QAAU,kBAAM7B,EAAQD,EAAK,IAAzD,kCCnFL+B,MAVf,WACE,OACE,sBAAKhE,UAAU,MAAf,UACE,cAAC,EAAD,CAAQE,MAAM,qBACd,cAAC,EAAD,IACA,cAAC,EAAD,CAAQA,MAAM,aCCL+D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c8cd9e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(props) { // pass in props from parent component\r\n    return(\r\n        <div className=\"header\">\r\n            <i class=\"material-icons\">theater_comedy</i> {props.title} <i class=\"material-icons\">theater_comedy</i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer(props) { \r\n    return(\r\n        <div className=\"footer\">\r\n            {props.title}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './Movies.css';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction Movies(props) {\r\n\r\n    return (\r\n        <div>\r\n            {props.movies.map(movie => {\r\n                return (\r\n                    \r\n                    <Card style={{ width: '45rem' }}>\r\n                    <div className=\"movieContainer\">\r\n                        <div className=\"movieImage\" >\r\n                        <Card.Img variant=\"top\" src={movie.Poster} />\r\n                        </div>\r\n                        <div className=\"movieBody\" style={{ width: '23rem' }}>\r\n                        <Card.Body >\r\n                            <Card.Title><h1><b>{movie.Title}</b></h1></Card.Title>\r\n                            <Card.Text>\r\n                                Release Date: {movie.Released}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                Runtime: {movie.Runtime}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                <h4><b>Rating: {movie.imdbRating} / 10 </b></h4>\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                {movie.Plot}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                Director: {movie.Director}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                Genre: {movie.Genre}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        </div>\r\n                    </div>\r\n                    </Card>\r\n                   \r\n                )  \r\n            })}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Movies;","import React, {useState, useEffect } from 'react';\r\nimport './MovieInfo.css';\r\nimport Movies from './Movies';\r\n\r\nfunction MovieInfo() { \r\n    const [query, setQuery] = useState('');\r\n    const [movies, setMovies] = useState([]); // captures array of objects returned from API fetch\r\n    const [showMovies, setShowMovies] = useState(false);\r\n    const [totalResults, setTotalResults] = useState(0);\r\n    const [page, setPage] = useState(2);\r\n    const [numPages, setNumPages] = useState(0);\r\n\r\n\r\n    function handleSubmit(e) {\r\n        // let currPage = 2;\r\n        // setPage(page+1);\r\n        e.preventDefault();\r\n        \r\n        console.log(\"Displaying page: \");\r\n        console.log(page);\r\n\r\n        async function fetchMyAPI() {\r\n            const searchParam = encodeURIComponent(query); // URI encode search using escape chars (%)\r\n            const apiUrl = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}&s=${searchParam}&type=movie&r=json&page=${page}`; // tt0206512\r\n            console.log(apiUrl);\r\n            let response = await fetch(apiUrl); // call API using fetch\r\n            response = await response.json(); // transform into json\r\n\r\n            // console.log('initial search response: ');\r\n            \r\n\r\n            console.log(\"for loop: \");\r\n            for (let i in response.Search) {\r\n                // console.log(movie.Title);\r\n                // console.log(response.Search[i].Title);\r\n                const apiUrl2 = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}&t=${response.Search[i].Title}&type=movie&r=json&page=${page}`;\r\n                // console.log(apiUrl2);\r\n\r\n                let response2 = await fetch(apiUrl2); // call API using fetch\r\n                response2 = await response2.json(); // transform into json\r\n                console.log(response2);\r\n\r\n                // Update the array with additional details for each movie\r\n                response.Search[i] = response2;\r\n            }\r\n\r\n            console.log('Updated search response: ');\r\n            console.log(response.Search);\r\n            setMovies(response.Search);\r\n\r\n            setTotalResults(response.totalResults);\r\n            console.log('Total results: ' + response.totalResults);\r\n            console.log('Total results (state): ' + totalResults);\r\n            setNumPages(Math.ceil(response.totalResults / 10));\r\n\r\n            // setTotalResults(response.totalResults, console.log('Total results: ' + totalResults));\r\n        }\r\n        fetchMyAPI();\r\n        \r\n        // useEffect(() => {\r\n        //     if(query !== \"\") {\r\n        //         fetchMyAPI();\r\n        //     }\r\n        // }, [page]);\r\n        \r\n        // See items w/ title and movie state\r\n        setShowMovies(true);\r\n        setQuery(\"\");\r\n    }\r\n\r\n    return(\r\n        <div className=\"movieinfo\">\r\n            Find your favorite movies to watch\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"queryInput\"></label>\r\n                <input\r\n                    id=\"queryInput\"\r\n                    value={query}\r\n                    type=\"text\"\r\n                    onChange={e => setQuery(e.target.value)}\r\n                    />\r\n                <button className=\"search\">Submit</button>\r\n            </form>\r\n                {showMovies ? <Movies movies={movies}></Movies> : <></>}\r\n            \r\n            <div>\r\n                {\r\n                    (numPages !== 0) &&\r\n                    <p>Showing <b>{totalResults} results</b> over {numPages} pages | Page: <b>{page}</b></p>\r\n                }\r\n            </div>\r\n            <div className=\"navigationBtns\">\r\n                {\r\n                    (page !== 1 && numPages !== 0) &&\r\n                    <button className=\"prevBtn\" onClick= {() => setPage(page-1)}>  &lt; Previous Page</button> /* &lt; */\r\n                    // &&\r\n                }\r\n                {\r\n                    (page < numPages) &&\r\n                    <button className=\"nextBtn\" onClick= {() => setPage(page+1)}> Next Page &gt; </button> /*<i class=\"material-icons\">arrow_forward_ios</i> */\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport MovieInfo from './components/MovieInfo';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title=\"Movie Search App\"></Header>\r\n      <MovieInfo></MovieInfo>\r\n      <Footer title=\"2021\"></Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}